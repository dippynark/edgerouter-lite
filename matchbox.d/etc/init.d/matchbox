#!/bin/bash

### BEGIN INIT INFO
# Provides:		matchbox
# Required-Start:	$remote_fs $syslog
# Required-Stop:	$remote_fs $syslog
# Default-Start:	2 3 4 5
# Default-Stop:		0 1 6
# Short-Description:	CoreOS matchbox server
### END INIT INFO

# http://werxltd.com/wp/2012/01/05/simple-init-d-script-template/
# https://github.com/fhd/init-script-template/blob/master/template

. /lib/lsb/init-functions

MATCHBOX="/usr/local/bin/matchbox"
MATCHBOX_OPTS="-address 0.0.0.0:8080 -rpc-address 0.0.0.0:8081"

NAME="matchbox"
PIDFILE="/var/run/$NAME.pid"

start() {
	echo "Starting CoreOS matchbox server..."
	OUTPUT=`start-stop-daemon --start --make-pidfile --pidfile $PIDFILE -b --exec $MATCHBOX -- $MATCHBOX_OPTS 2>&1`
	PID=`cat $PIDFILE 2>/dev/null`
	if [ ! -d "/proc/$PID" ]; then
	  if [ "$OUTPUT" == "" ]; then
	    # this can happen under high load due to some sort of a race condition
	    condition
	    sleep 1
	    start
	  else
	    log_failure_msg "$OUTPUT"
	    exit 1
	  fi
	fi
	log_success_msg "CoreOS matchbox server started"
}

stop() {
	if [ -f $PIDFILE ]; then
	  PID=`cat $PIDFILE`
	  if [ -n $PID ]; then
	    echo "Stopping CoreOS matchbox server..."
	    OUTPUT=`start-stop-daemon -q --stop --pidfile $PIDFILE 2>&1`
	    while [ -d "/proc/$PID" ]; do
	      sleep 1
	    done
	    log_success_msg "CoreOS matchbox server stopped"
	  else
	    log_failure_msg "PID file was empty" $PIDFILE
	    rm -f $PIDFILE
	    exit 1
	  fi
	  rm -f $PIDFILE
	else
	  log_failure_msg "Could not find pid file" $PIDFILE
	  exit 1
	fi
}

status() {
	status_of_proc -p $PIDFILE $MATCHBOX $NAME && exit 0 || exit $?
}

case "$1" in
  start)
	start
        ;;
  stop)
        stop
        ;;
  status)
	status
        ;;
  restart|reload|condrestart)
	stop
	start
        ;;
  *)
        echo $"Usage: $0 {start|stop|restart|status}"
        exit 1
esac

exit 0
